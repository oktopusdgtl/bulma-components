/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  ButtonColor,
  Color,
  Size,
} from './interfaces/interfaces';
import {
  ColumnSize,
  Narrow,
} from './components/column/column';
import {
  Stage,
} from './components/columns/columns';
import {
  ImageSize,
} from './components/image/image';

export namespace Components {
  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface OktBox {
    'href': string;
    'isLink': boolean;
  }
  interface OktBulma {}
  interface OktButton {
    'active': boolean;
    'color': ButtonColor;
    'disabled': boolean;
    'focused': boolean;
    'fullWidth': boolean;
    'hovered': boolean;
    'href': string;
    'inverted': boolean;
    'light': boolean;
    'loading': boolean;
    'outlined': boolean;
    'rounded': boolean;
    'size': Size;
    'tag': 'a' | 'button' | 'input';
    'type': 'submit' | 'reset' | 'button';
  }
  interface OktButtons {
    'addons': boolean;
    'alignment': 'centered' | 'right';
    'size': Size;
  }
  interface OktCallout {
    'color': Color;
  }
  interface OktCode {}
  interface OktColumn {
    'columns': ColumnSize;
    'desktop': ColumnSize;
    'fullhd': ColumnSize;
    'mobile': ColumnSize;
    'narrow': Narrow;
    'offset': ColumnSize;
    'offsetDesktop': ColumnSize;
    'offsetFullhd': ColumnSize;
    'offsetMobile': ColumnSize;
    'offsetTablet': ColumnSize;
    'offsetTouch': ColumnSize;
    'offsetWidescreen': ColumnSize;
    'tablet': ColumnSize;
    'touch': ColumnSize;
    'widescreen': ColumnSize;
  }
  interface OktColumns {
    'centered': boolean;
    'gap': number;
    'gapDesktop': number;
    'gapFullhd': number;
    'gapMobile': number;
    'gapTablet': number;
    'gapWidescreen': number;
    'gapless': boolean;
    'multiline': boolean;
    'stage': Stage;
    'variable': boolean;
    'vcentered': boolean;
  }
  interface OktContainer {
    'breakpoint': 'widescreen' | 'fullhd';
    'fluid': boolean;
  }
  interface OktContent {
    'size': Size;
  }
  interface OktControl {
    'expanded': boolean;
    'iconLeft': boolean;
    'iconRight': boolean;
  }
  interface OktDemo {}
  interface OktDemoBox {}
  interface OktDemoButton {}
  interface OktDemoColumn {}
  interface OktDemoContainer {}
  interface OktDemoContent {}
  interface OktDemoIcon {}
  interface OktDemoImage {}
  interface OktDemoNotification {}
  interface OktDemoProgress {}
  interface OktDemoTable {}
  interface OktField {
    'addons': boolean;
    'addonsAlignment': 'centered' | 'right';
    'groupAlignment': 'centered' | 'right';
    'grouped': boolean;
    'groupedMultiline': boolean;
    'horizontal': boolean;
  }
  interface OktIcon {
    'color': Color | 'link';
    'size': Size;
  }
  interface OktImage {
    'alt': string;
    'hideImage': boolean;
    'rounded': boolean;
    'size': 16 | 24 | 32 | 48 | 64 | 96 | 128 | ImageSize;
    'src': string;
  }
  interface OktNotification {
    'color': Color | 'link';
  }
  interface OktProgress {
    'color': Color | 'link';
    'max': string;
    'size': Size;
    'value': string;
  }
  interface OktRoot {}
  interface OktTable {
    'bordered': boolean;
    'fullWidth': boolean;
    'hoverable': boolean;
    'narrow': boolean;
    'scrollable': boolean;
    'striped': boolean;
  }
  interface OktTableContainer {}
}

declare global {


  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLOktBoxElement extends Components.OktBox, HTMLStencilElement {}
  var HTMLOktBoxElement: {
    prototype: HTMLOktBoxElement;
    new (): HTMLOktBoxElement;
  };

  interface HTMLOktBulmaElement extends Components.OktBulma, HTMLStencilElement {}
  var HTMLOktBulmaElement: {
    prototype: HTMLOktBulmaElement;
    new (): HTMLOktBulmaElement;
  };

  interface HTMLOktButtonElement extends Components.OktButton, HTMLStencilElement {}
  var HTMLOktButtonElement: {
    prototype: HTMLOktButtonElement;
    new (): HTMLOktButtonElement;
  };

  interface HTMLOktButtonsElement extends Components.OktButtons, HTMLStencilElement {}
  var HTMLOktButtonsElement: {
    prototype: HTMLOktButtonsElement;
    new (): HTMLOktButtonsElement;
  };

  interface HTMLOktCalloutElement extends Components.OktCallout, HTMLStencilElement {}
  var HTMLOktCalloutElement: {
    prototype: HTMLOktCalloutElement;
    new (): HTMLOktCalloutElement;
  };

  interface HTMLOktCodeElement extends Components.OktCode, HTMLStencilElement {}
  var HTMLOktCodeElement: {
    prototype: HTMLOktCodeElement;
    new (): HTMLOktCodeElement;
  };

  interface HTMLOktColumnElement extends Components.OktColumn, HTMLStencilElement {}
  var HTMLOktColumnElement: {
    prototype: HTMLOktColumnElement;
    new (): HTMLOktColumnElement;
  };

  interface HTMLOktColumnsElement extends Components.OktColumns, HTMLStencilElement {}
  var HTMLOktColumnsElement: {
    prototype: HTMLOktColumnsElement;
    new (): HTMLOktColumnsElement;
  };

  interface HTMLOktContainerElement extends Components.OktContainer, HTMLStencilElement {}
  var HTMLOktContainerElement: {
    prototype: HTMLOktContainerElement;
    new (): HTMLOktContainerElement;
  };

  interface HTMLOktContentElement extends Components.OktContent, HTMLStencilElement {}
  var HTMLOktContentElement: {
    prototype: HTMLOktContentElement;
    new (): HTMLOktContentElement;
  };

  interface HTMLOktControlElement extends Components.OktControl, HTMLStencilElement {}
  var HTMLOktControlElement: {
    prototype: HTMLOktControlElement;
    new (): HTMLOktControlElement;
  };

  interface HTMLOktDemoElement extends Components.OktDemo, HTMLStencilElement {}
  var HTMLOktDemoElement: {
    prototype: HTMLOktDemoElement;
    new (): HTMLOktDemoElement;
  };

  interface HTMLOktDemoBoxElement extends Components.OktDemoBox, HTMLStencilElement {}
  var HTMLOktDemoBoxElement: {
    prototype: HTMLOktDemoBoxElement;
    new (): HTMLOktDemoBoxElement;
  };

  interface HTMLOktDemoButtonElement extends Components.OktDemoButton, HTMLStencilElement {}
  var HTMLOktDemoButtonElement: {
    prototype: HTMLOktDemoButtonElement;
    new (): HTMLOktDemoButtonElement;
  };

  interface HTMLOktDemoColumnElement extends Components.OktDemoColumn, HTMLStencilElement {}
  var HTMLOktDemoColumnElement: {
    prototype: HTMLOktDemoColumnElement;
    new (): HTMLOktDemoColumnElement;
  };

  interface HTMLOktDemoContainerElement extends Components.OktDemoContainer, HTMLStencilElement {}
  var HTMLOktDemoContainerElement: {
    prototype: HTMLOktDemoContainerElement;
    new (): HTMLOktDemoContainerElement;
  };

  interface HTMLOktDemoContentElement extends Components.OktDemoContent, HTMLStencilElement {}
  var HTMLOktDemoContentElement: {
    prototype: HTMLOktDemoContentElement;
    new (): HTMLOktDemoContentElement;
  };

  interface HTMLOktDemoIconElement extends Components.OktDemoIcon, HTMLStencilElement {}
  var HTMLOktDemoIconElement: {
    prototype: HTMLOktDemoIconElement;
    new (): HTMLOktDemoIconElement;
  };

  interface HTMLOktDemoImageElement extends Components.OktDemoImage, HTMLStencilElement {}
  var HTMLOktDemoImageElement: {
    prototype: HTMLOktDemoImageElement;
    new (): HTMLOktDemoImageElement;
  };

  interface HTMLOktDemoNotificationElement extends Components.OktDemoNotification, HTMLStencilElement {}
  var HTMLOktDemoNotificationElement: {
    prototype: HTMLOktDemoNotificationElement;
    new (): HTMLOktDemoNotificationElement;
  };

  interface HTMLOktDemoProgressElement extends Components.OktDemoProgress, HTMLStencilElement {}
  var HTMLOktDemoProgressElement: {
    prototype: HTMLOktDemoProgressElement;
    new (): HTMLOktDemoProgressElement;
  };

  interface HTMLOktDemoTableElement extends Components.OktDemoTable, HTMLStencilElement {}
  var HTMLOktDemoTableElement: {
    prototype: HTMLOktDemoTableElement;
    new (): HTMLOktDemoTableElement;
  };

  interface HTMLOktFieldElement extends Components.OktField, HTMLStencilElement {}
  var HTMLOktFieldElement: {
    prototype: HTMLOktFieldElement;
    new (): HTMLOktFieldElement;
  };

  interface HTMLOktIconElement extends Components.OktIcon, HTMLStencilElement {}
  var HTMLOktIconElement: {
    prototype: HTMLOktIconElement;
    new (): HTMLOktIconElement;
  };

  interface HTMLOktImageElement extends Components.OktImage, HTMLStencilElement {}
  var HTMLOktImageElement: {
    prototype: HTMLOktImageElement;
    new (): HTMLOktImageElement;
  };

  interface HTMLOktNotificationElement extends Components.OktNotification, HTMLStencilElement {}
  var HTMLOktNotificationElement: {
    prototype: HTMLOktNotificationElement;
    new (): HTMLOktNotificationElement;
  };

  interface HTMLOktProgressElement extends Components.OktProgress, HTMLStencilElement {}
  var HTMLOktProgressElement: {
    prototype: HTMLOktProgressElement;
    new (): HTMLOktProgressElement;
  };

  interface HTMLOktRootElement extends Components.OktRoot, HTMLStencilElement {}
  var HTMLOktRootElement: {
    prototype: HTMLOktRootElement;
    new (): HTMLOktRootElement;
  };

  interface HTMLOktTableElement extends Components.OktTable, HTMLStencilElement {}
  var HTMLOktTableElement: {
    prototype: HTMLOktTableElement;
    new (): HTMLOktTableElement;
  };

  interface HTMLOktTableContainerElement extends Components.OktTableContainer, HTMLStencilElement {}
  var HTMLOktTableContainerElement: {
    prototype: HTMLOktTableContainerElement;
    new (): HTMLOktTableContainerElement;
  };
  interface HTMLElementTagNameMap {
    'my-component': HTMLMyComponentElement;
    'okt-box': HTMLOktBoxElement;
    'okt-bulma': HTMLOktBulmaElement;
    'okt-button': HTMLOktButtonElement;
    'okt-buttons': HTMLOktButtonsElement;
    'okt-callout': HTMLOktCalloutElement;
    'okt-code': HTMLOktCodeElement;
    'okt-column': HTMLOktColumnElement;
    'okt-columns': HTMLOktColumnsElement;
    'okt-container': HTMLOktContainerElement;
    'okt-content': HTMLOktContentElement;
    'okt-control': HTMLOktControlElement;
    'okt-demo': HTMLOktDemoElement;
    'okt-demo-box': HTMLOktDemoBoxElement;
    'okt-demo-button': HTMLOktDemoButtonElement;
    'okt-demo-column': HTMLOktDemoColumnElement;
    'okt-demo-container': HTMLOktDemoContainerElement;
    'okt-demo-content': HTMLOktDemoContentElement;
    'okt-demo-icon': HTMLOktDemoIconElement;
    'okt-demo-image': HTMLOktDemoImageElement;
    'okt-demo-notification': HTMLOktDemoNotificationElement;
    'okt-demo-progress': HTMLOktDemoProgressElement;
    'okt-demo-table': HTMLOktDemoTableElement;
    'okt-field': HTMLOktFieldElement;
    'okt-icon': HTMLOktIconElement;
    'okt-image': HTMLOktImageElement;
    'okt-notification': HTMLOktNotificationElement;
    'okt-progress': HTMLOktProgressElement;
    'okt-root': HTMLOktRootElement;
    'okt-table': HTMLOktTableElement;
    'okt-table-container': HTMLOktTableContainerElement;
  }
}

declare namespace LocalJSX {
  interface MyComponent {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }
  interface OktBox {
    'href'?: string;
    'isLink'?: boolean;
  }
  interface OktBulma {}
  interface OktButton {
    'active'?: boolean;
    'color'?: ButtonColor;
    'disabled'?: boolean;
    'focused'?: boolean;
    'fullWidth'?: boolean;
    'hovered'?: boolean;
    'href'?: string;
    'inverted'?: boolean;
    'light'?: boolean;
    'loading'?: boolean;
    'outlined'?: boolean;
    'rounded'?: boolean;
    'size'?: Size;
    'tag'?: 'a' | 'button' | 'input';
    'type'?: 'submit' | 'reset' | 'button';
  }
  interface OktButtons {
    'addons'?: boolean;
    'alignment'?: 'centered' | 'right';
    'size'?: Size;
  }
  interface OktCallout {
    'color'?: Color;
  }
  interface OktCode {}
  interface OktColumn {
    'columns'?: ColumnSize;
    'desktop'?: ColumnSize;
    'fullhd'?: ColumnSize;
    'mobile'?: ColumnSize;
    'narrow'?: Narrow;
    'offset'?: ColumnSize;
    'offsetDesktop'?: ColumnSize;
    'offsetFullhd'?: ColumnSize;
    'offsetMobile'?: ColumnSize;
    'offsetTablet'?: ColumnSize;
    'offsetTouch'?: ColumnSize;
    'offsetWidescreen'?: ColumnSize;
    'tablet'?: ColumnSize;
    'touch'?: ColumnSize;
    'widescreen'?: ColumnSize;
  }
  interface OktColumns {
    'centered'?: boolean;
    'gap'?: number;
    'gapDesktop'?: number;
    'gapFullhd'?: number;
    'gapMobile'?: number;
    'gapTablet'?: number;
    'gapWidescreen'?: number;
    'gapless'?: boolean;
    'multiline'?: boolean;
    'stage'?: Stage;
    'variable'?: boolean;
    'vcentered'?: boolean;
  }
  interface OktContainer {
    'breakpoint'?: 'widescreen' | 'fullhd';
    'fluid'?: boolean;
  }
  interface OktContent {
    'size'?: Size;
  }
  interface OktControl {
    'expanded'?: boolean;
    'iconLeft'?: boolean;
    'iconRight'?: boolean;
  }
  interface OktDemo {}
  interface OktDemoBox {}
  interface OktDemoButton {}
  interface OktDemoColumn {}
  interface OktDemoContainer {}
  interface OktDemoContent {}
  interface OktDemoIcon {}
  interface OktDemoImage {}
  interface OktDemoNotification {}
  interface OktDemoProgress {}
  interface OktDemoTable {}
  interface OktField {
    'addons'?: boolean;
    'addonsAlignment'?: 'centered' | 'right';
    'groupAlignment'?: 'centered' | 'right';
    'grouped'?: boolean;
    'groupedMultiline'?: boolean;
    'horizontal'?: boolean;
  }
  interface OktIcon {
    'color'?: Color | 'link';
    'size'?: Size;
  }
  interface OktImage {
    'alt'?: string;
    'hideImage'?: boolean;
    'rounded'?: boolean;
    'size'?: 16 | 24 | 32 | 48 | 64 | 96 | 128 | ImageSize;
    'src'?: string;
  }
  interface OktNotification {
    'color'?: Color | 'link';
  }
  interface OktProgress {
    'color'?: Color | 'link';
    'max'?: string;
    'size'?: Size;
    'value'?: string;
  }
  interface OktRoot {}
  interface OktTable {
    'bordered'?: boolean;
    'fullWidth'?: boolean;
    'hoverable'?: boolean;
    'narrow'?: boolean;
    'scrollable'?: boolean;
    'striped'?: boolean;
  }
  interface OktTableContainer {}

  interface IntrinsicElements {
    'my-component': MyComponent;
    'okt-box': OktBox;
    'okt-bulma': OktBulma;
    'okt-button': OktButton;
    'okt-buttons': OktButtons;
    'okt-callout': OktCallout;
    'okt-code': OktCode;
    'okt-column': OktColumn;
    'okt-columns': OktColumns;
    'okt-container': OktContainer;
    'okt-content': OktContent;
    'okt-control': OktControl;
    'okt-demo': OktDemo;
    'okt-demo-box': OktDemoBox;
    'okt-demo-button': OktDemoButton;
    'okt-demo-column': OktDemoColumn;
    'okt-demo-container': OktDemoContainer;
    'okt-demo-content': OktDemoContent;
    'okt-demo-icon': OktDemoIcon;
    'okt-demo-image': OktDemoImage;
    'okt-demo-notification': OktDemoNotification;
    'okt-demo-progress': OktDemoProgress;
    'okt-demo-table': OktDemoTable;
    'okt-field': OktField;
    'okt-icon': OktIcon;
    'okt-image': OktImage;
    'okt-notification': OktNotification;
    'okt-progress': OktProgress;
    'okt-root': OktRoot;
    'okt-table': OktTable;
    'okt-table-container': OktTableContainer;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'my-component': LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
      'okt-box': LocalJSX.OktBox & JSXBase.HTMLAttributes<HTMLOktBoxElement>;
      'okt-bulma': LocalJSX.OktBulma & JSXBase.HTMLAttributes<HTMLOktBulmaElement>;
      'okt-button': LocalJSX.OktButton & JSXBase.HTMLAttributes<HTMLOktButtonElement>;
      'okt-buttons': LocalJSX.OktButtons & JSXBase.HTMLAttributes<HTMLOktButtonsElement>;
      'okt-callout': LocalJSX.OktCallout & JSXBase.HTMLAttributes<HTMLOktCalloutElement>;
      'okt-code': LocalJSX.OktCode & JSXBase.HTMLAttributes<HTMLOktCodeElement>;
      'okt-column': LocalJSX.OktColumn & JSXBase.HTMLAttributes<HTMLOktColumnElement>;
      'okt-columns': LocalJSX.OktColumns & JSXBase.HTMLAttributes<HTMLOktColumnsElement>;
      'okt-container': LocalJSX.OktContainer & JSXBase.HTMLAttributes<HTMLOktContainerElement>;
      'okt-content': LocalJSX.OktContent & JSXBase.HTMLAttributes<HTMLOktContentElement>;
      'okt-control': LocalJSX.OktControl & JSXBase.HTMLAttributes<HTMLOktControlElement>;
      'okt-demo': LocalJSX.OktDemo & JSXBase.HTMLAttributes<HTMLOktDemoElement>;
      'okt-demo-box': LocalJSX.OktDemoBox & JSXBase.HTMLAttributes<HTMLOktDemoBoxElement>;
      'okt-demo-button': LocalJSX.OktDemoButton & JSXBase.HTMLAttributes<HTMLOktDemoButtonElement>;
      'okt-demo-column': LocalJSX.OktDemoColumn & JSXBase.HTMLAttributes<HTMLOktDemoColumnElement>;
      'okt-demo-container': LocalJSX.OktDemoContainer & JSXBase.HTMLAttributes<HTMLOktDemoContainerElement>;
      'okt-demo-content': LocalJSX.OktDemoContent & JSXBase.HTMLAttributes<HTMLOktDemoContentElement>;
      'okt-demo-icon': LocalJSX.OktDemoIcon & JSXBase.HTMLAttributes<HTMLOktDemoIconElement>;
      'okt-demo-image': LocalJSX.OktDemoImage & JSXBase.HTMLAttributes<HTMLOktDemoImageElement>;
      'okt-demo-notification': LocalJSX.OktDemoNotification & JSXBase.HTMLAttributes<HTMLOktDemoNotificationElement>;
      'okt-demo-progress': LocalJSX.OktDemoProgress & JSXBase.HTMLAttributes<HTMLOktDemoProgressElement>;
      'okt-demo-table': LocalJSX.OktDemoTable & JSXBase.HTMLAttributes<HTMLOktDemoTableElement>;
      'okt-field': LocalJSX.OktField & JSXBase.HTMLAttributes<HTMLOktFieldElement>;
      'okt-icon': LocalJSX.OktIcon & JSXBase.HTMLAttributes<HTMLOktIconElement>;
      'okt-image': LocalJSX.OktImage & JSXBase.HTMLAttributes<HTMLOktImageElement>;
      'okt-notification': LocalJSX.OktNotification & JSXBase.HTMLAttributes<HTMLOktNotificationElement>;
      'okt-progress': LocalJSX.OktProgress & JSXBase.HTMLAttributes<HTMLOktProgressElement>;
      'okt-root': LocalJSX.OktRoot & JSXBase.HTMLAttributes<HTMLOktRootElement>;
      'okt-table': LocalJSX.OktTable & JSXBase.HTMLAttributes<HTMLOktTableElement>;
      'okt-table-container': LocalJSX.OktTableContainer & JSXBase.HTMLAttributes<HTMLOktTableContainerElement>;
    }
  }
}


